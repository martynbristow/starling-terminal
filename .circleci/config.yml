version: 2
jobs:
  build:
    working_directory: /home/circleci/starling-terminal
    docker:
      - image: circleci/ruby:2.4.1-node
    steps:
      - run:
          name: Trigger Jobs
          command: |
            function trigger_job() {
                  job_name=$1
                  curl -u ${CIRCLE_API_TOKEN}: \
                    -d build_parameters[CIRCLE_JOB]=${job_name} \
                    -d revision=$CIRCLE_SHA1 \
                    https://circleci.com/api/v1.1/project/github/timrogers/starling-terminal/tree/$CIRCLE_BRANCH
                }      
                trigger_job build-ruby241
                trigger_job build-ruby234
                trigger_job build-ruby227
  build-ruby241:
    docker:
      - image: circleci/ruby:2.4.1-node
    working_directory: /home/circleci/starling-terminal
    steps: &common-steps
      - checkout

      # Restore bundle cache
      - type: cache-restore
        key: starling-terminal-{{ checksum "Gemfile.lock" }}

      # Update bundler
      - run: gem install bundler

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Store bundle cache
      - type: cache-save
        key: starling-terminal-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      # Run RSpec in parallel
      - type: shell
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # Run Rubocop
      - type: shell
        command: |
          bundle exec rubocop

      # Run Reek
      - type: shell
        command: |
          bundle exec reek lib

      # Save artifacts
      - type: store_test_results
        path: /tmp/test-results
  build-ruby234:
    docker:
      - image: circleci/ruby:2.3.4-node
    working_directory: /home/circleci/starling-terminal
    steps: *common-steps
  build-ruby227:
    docker:
      - image: circleci/ruby:2.2.7-node
    working_directory: /home/circleci/starling-terminal
    steps: *common-steps